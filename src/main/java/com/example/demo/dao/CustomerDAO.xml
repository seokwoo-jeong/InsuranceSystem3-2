<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
<mapper namespace="com.example.demo.dao.CustomerDAO">

 	<!-- Selectë¬¸ --> 

    <select id="SelectMaxID" resultType = "int">
		select Max(CustomerID) as CustomerID from Customer
    </select>

    <select id="CheckInsuranceName" parameterType="string" resultType = "int">
		SELECT EXISTS (select InsuranceName from Insurance where InsuranceName = #{record}) as isChk
    </select>

    <select id="getInsuranceType2" resultType = "com.example.demo.model.Insurance.Insurance">
		select insuranceType from insurance where insuranceID = #{insuranceID}
    </select>

    <select id="findPersonalInformation" parameterType="int" resultMap="PersonalInformation">
		select * from personalInformation where PcustomerID = #{customerID}
    </select>
    <resultMap type = "com.example.demo.model.Customer.PersonalInformation" id="PersonalInformation">
   	 	<id column="pcustomerID" property="customerID"/>
   	 	<result column="accidentHistory" property="accidentHistory"/>
   	 	<result column="accountNumber" property="accountNumber"/>
   	 	<result column="gender" property="gender"/>
   	 	<result column="job" property="job"/>
   	 	<result column="residentRegistrationNumber" property="residentRegistrationNumber"/>
    </resultMap>  
 

    <select id="findBuildingCustomer" parameterType="int" resultMap="Building">
		select * from Building where BcustomerID = #{customerID}
    </select>
  <resultMap type = "com.example.demo.model.Customer.Building" id="Building">
   	 	<id column="bcustomerID" property="customerID"/>
    </resultMap>  

    <select id="findCarCustomer" parameterType="int" resultMap="Car">
		select * from Car where CcustomerID = #{customerID}
    </select>
  <resultMap type = "com.example.demo.model.Customer.Car" id="Car">
   	 	<id column="CcustomerID" property="customerID"/>
    </resultMap> 

    <select id="findActualCostCustomer" parameterType="int" resultMap="ActualCost">
		select * from ActualCost where AcustomerID = #{customerID} 

    </select>
    <resultMap type = "com.example.demo.model.Customer.ActualCost" id="ActualCost">
   	 	<id column="AcustomerID" property="customerID"/>
    </resultMap> 
  

	<select id="getInsuranceType" parameterType="int" resultType="String">
		select insuranceType from insurance where insuranceID = #{insuranceID}
	</select>	
	
	<select id="findPersonalInformationByCutomerID" parameterType="int" resultType="com.example.demo.model.Customer.PersonalInformation">
		select * from PersonalInformation where PcustomerID = #{customerID}
	</select>

	<select id="getCar" parameterType="int" resultType="com.example.demo.model.Customer.Car">
		select * from Car where CcustomerID = #{customerID}
	</select>
	
	<select id="getBuildingPrice" parameterType="int" resultType="float">
		select buildingPrice from Building where BcustomerID = #{customerID}
	</select>
	
	<select id="getActualCost" parameterType="int" resultMap="ActualCost2">
		select * from ActualCost where AcustomerID = #{customerID}
	</select>	
	    <resultMap type = "com.example.demo.model.Customer.ActualCost" id="ActualCost2">
   	 	<id column="AcustomerID" property="customerID"/>
    </resultMap> 
	
    <!--  insert -->
    <insert id="insertBuilding" parameterType="com.example.demo.model.Customer.Building">
		insert into Building values(#{customerID}, #{BuildingPrice}, #{BuildingAddress}, #{BuildingScale})
    </insert>
 
    <insert id="insertCar" parameterType="com.example.demo.model.Customer.Car">
		insert into Car values(#{customerID}, #{CarNumber}, #{carType}, #{DrivingCareer}, #{licenseType})
    </insert>

	<insert id="insertActualCost" parameterType="com.example.demo.model.Customer.ActualCost">
		insert into ActualCost values(#{customerID}, #{bloodType}, #{FamilyHistory}, #{diseaseHistory})
	</insert>

	<insert id="insertCustomer" parameterType="com.example.demo.model.Customer.Customer">
		insert into Customer values(#{customerID}, #{phoneNum}, #{customerName})
	</insert>

	<insert id="insertPersonalInformation" parameterType="com.example.demo.model.Customer.PersonalInformation">
		insert into PersonalInformation values(#{customerID}, #{AccidentHistory}, #{AccountNumber}, 
		#{ResidentRegistrationNumber}, #{Gender}, #{job}, #{Property})
	</insert>
	
	<update id="updatePersonalInformation" parameterType="HashMap">
		update PersonalInformation set accountNumber = #{accountNumber} where PcustomerID = #{customerID}
    </update>
</mapper>